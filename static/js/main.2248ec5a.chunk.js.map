{"version":3,"sources":["components/Kathrin.js","components/Mom.js","App.js","reportWebVitals.js","index.js"],"names":["App","cardStyle","width","height","listStyle","background","borderRadius","position","top","left","boxShadow","textAlign","fontSize","border","boxSizing","margin","padding","cursor","style","Container","Row","className","Col","md","marginLeft","throwout","e","console","log","cardData","text","lineHeight","cards","i","length","data","push","Card","image","Img","draggable","variant","src","Body","Text","whiteSpace","reverse","renderCards","Home","basename","exact","path","component","Kathrin","Mom","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2248ec5a.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Container, Row, Col, Card } from 'react-bootstrap';\r\n\r\nimport ReactSwing from 'react-swing';\r\n\r\nconst App = () => {\r\n  const stackStyle = {\r\n    width: '300px',\r\n    height: '300px',\r\n    position: 'absolute',\r\n    top: '150px',\r\n    left: '50%',\r\n    marginLeft: '-150px',\r\n    borderRadius: '10px',\r\n  };\r\n\r\n  const cardStyle = {\r\n    width: '300px',\r\n    height: '300px',\r\n    listStyle: 'none',\r\n    background: '#fff',\r\n    borderRadius: '5px',\r\n    position: 'absolute',\r\n    top: '0',\r\n    left: '0',\r\n    boxShadow: '0 0 2px rgba(0,0,0,.2), 1px 1px 1px rgba(0,0,0,.2)',\r\n    textAlign: 'center',\r\n    fontSize: '25px',\r\n    border: '10px solid #f24141',\r\n    boxSizing: 'border-box',\r\n    margin: 'auto',\r\n    padding: '20px',\r\n    cursor: 'default',\r\n  };\r\n\r\n  const renderCards = () => {\r\n    const cardData = [\r\n      {\r\n        text: 'ðŸ’•',\r\n        fontSize: '75px',\r\n      },\r\n      {\r\n        text: 'To Kathrin',\r\n        fontSize: '40px',\r\n        lineHeight: '150px',\r\n      },\r\n      {\r\n        text: 'From Steven',\r\n        fontSize: '40px',\r\n        lineHeight: '150px',\r\n      },\r\n      {\r\n        text: 'I love you so much.',\r\n      },\r\n      {\r\n        text: 'Thank you for everything you do for me.',\r\n      },\r\n      {\r\n        text: 'My life is so much happier than before you were in it.',\r\n      },\r\n      {\r\n        text: `Happy Valentine's day!`,\r\n      },\r\n      {\r\n        text: 'ðŸ’•',\r\n        fontSize: '100px',\r\n      },\r\n    ];\r\n\r\n    const cards = [];\r\n\r\n    for (let i = 0; i < cardData.length; i++) {\r\n      const data = cardData[i];\r\n\r\n      cards.push(\r\n        <Card\r\n          style={{\r\n            ...cardStyle,\r\n            fontSize: data.fontSize ? data.fontSize : cardStyle.fontSize,\r\n            lineHeight: data.lineHeight ? data.lineHeight : cardStyle.lineHeight,\r\n          }}\r\n        >\r\n          {data.image ? <Card.Img draggable=\"false\" variant=\"top\" src={`${data.image}`} /> : ''}\r\n          <Card.Body className=\"justify-content-center \">\r\n            <Card.Text style={{ whiteSpace: 'pre-wrap' }} md=\"auto\">\r\n              {data.text}\r\n            </Card.Text>\r\n          </Card.Body>\r\n        </Card>,\r\n      );\r\n    }\r\n\r\n    return cards.reverse();\r\n  };\r\n\r\n  return (\r\n    <div style={{ width: 1000 }}>\r\n      <Container>\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col md=\"auto\">\r\n            <ReactSwing style={stackStyle} throwout={(e) => console.log('throwout', e)}>\r\n              {renderCards()}\r\n            </ReactSwing>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport { Container, Row, Col, Card } from 'react-bootstrap';\r\n\r\nimport ReactSwing from 'react-swing';\r\n\r\nconst App = () => {\r\n  const stackStyle = {\r\n    width: '300px',\r\n    height: '300px',\r\n    position: 'absolute',\r\n    top: '150px',\r\n    left: '50%',\r\n    marginLeft: '-150px',\r\n    borderRadius: '10px',\r\n  };\r\n\r\n  const cardStyle = {\r\n    width: '300px',\r\n    height: '300px',\r\n    listStyle: 'none',\r\n    background: '#fff',\r\n    borderRadius: '5px',\r\n    position: 'absolute',\r\n    top: '0',\r\n    left: '0',\r\n    boxShadow: '0 0 2px rgba(0,0,0,.2), 1px 1px 1px rgba(0,0,0,.2)',\r\n    textAlign: 'center',\r\n    fontSize: '25px',\r\n    border: '10px solid #f24141',\r\n    boxSizing: 'border-box',\r\n    margin: 'auto',\r\n    padding: '20px',\r\n    cursor: 'default',\r\n  };\r\n\r\n  const renderCards = () => {\r\n    const cardData = [\r\n      {\r\n        text: 'ðŸ’•',\r\n        fontSize: '100px',\r\n      },\r\n      {\r\n        text: 'To Mom',\r\n        fontSize: '40px',\r\n        lineHeight: '250px',\r\n      },\r\n      {\r\n        text: 'From Steven',\r\n        fontSize: '40px',\r\n        lineHeight: '250px',\r\n      },\r\n      {\r\n        text: 'Thank you for being the best Mom ever',\r\n      },\r\n      {\r\n        text: 'Thank you teaching me so many great values',\r\n      },\r\n      {\r\n        text: 'Thanks for always being involved and supportive, especially with Luca',\r\n      },\r\n      {\r\n        text: `Happy Valentine's day!`,\r\n      },\r\n      {\r\n        text: 'ðŸ’•',\r\n        fontSize: '100px',\r\n      },\r\n    ];\r\n\r\n    const cards = [];\r\n\r\n    for (let i = 0; i < cardData.length; i++) {\r\n      const data = cardData[i];\r\n\r\n      cards.push(\r\n        <Card\r\n          style={{\r\n            ...cardStyle,\r\n            fontSize: data.fontSize ? data.fontSize : cardStyle.fontSize,\r\n            lineHeight: data.lineHeight ? data.lineHeight : cardStyle.lineHeight,\r\n          }}\r\n        >\r\n          {data.image ? <Card.Img draggable=\"false\" variant=\"top\" src={`${data.image}`} /> : ''}\r\n          <Card.Body className=\"justify-content-center \">\r\n            <Card.Text style={{ whiteSpace: 'pre-wrap' }} md=\"auto\">\r\n              {data.text}\r\n            </Card.Text>\r\n          </Card.Body>\r\n        </Card>,\r\n      );\r\n    }\r\n\r\n    return cards.reverse();\r\n  };\r\n\r\n  return (\r\n    <div style={{ width: 20 }}>\r\n      <Container>\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col md=\"auto\">\r\n            <ReactSwing style={stackStyle} throwout={(e) => console.log('throwout', e)}>\r\n              {renderCards()}\r\n            </ReactSwing>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport { HashRouter as Router, Route, Link } from 'react-router-dom';\r\nimport Kathrin from './components/Kathrin';\r\nimport Mom from './components/Mom';\r\n\r\nconst Home = () => <h1>home</h1>;\r\n\r\nconst App = () => (\r\n  <div>\r\n    <Router basename=\"/\">\r\n      <Route exact path=\"/\" component={Home} />\r\n      <Route path=\"/kathrin\" component={Kathrin} />\r\n      <Route path=\"/mom\" component={Mom} />\r\n    </Router>\r\n  </div>\r\n);\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}